<div id="@Id"></div>
<div id="sliders">
    <table>
        <tbody>
            <tr>
                <td>
                    <label for="alpha">Alpha Angle</label>
                </td>
                <td>
                    <input id="alpha" type="range" min="0" max="45" value="15"> <span id="alpha-value" class="value">25</span>
                </td>
            </tr>
            <tr>
                <td>
                    <label for="beta">Beta Angle</label>
                </td>
                <td>
                    <input id="beta" type="range" min="-45" max="45" value="15"> <span id="beta-value" class="value">19</span>
                </td>
            </tr>
            <tr>
                <td>
                    <label for="depth">Depth</label>
                </td>
                <td>
                    <input id="depth" type="range" min="20" max="100" value="50"> <span id="depth-value" class="value">50</span>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public YearlySaleAmountModel? YearlySaleAmountData { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (YearlySaleAmountData is not null)
            {
                await JsRuntime.InvokeVoidAsync("yearlySaleAmount", Id, Title, YearlySaleAmountData.category,
                YearlySaleAmountData.data);
            }
        }
    }
}
