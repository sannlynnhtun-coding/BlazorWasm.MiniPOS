@using System.Text.RegularExpressions;
@inherits LayoutComponentBase
@inject ChartStateContainer StateContainer
<div class="min-h-full">
    <nav class="bg-gray-800">
        <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
            <div class="relative flex h-16 items-center justify-between">
                <div class="absolute inset-y-0 left-0 flex items-center sm:hidden">
                    <!-- Mobile menu button-->
                    <button type="button" class="relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
                        <span class="absolute -inset-0.5"></span>
                        <span class="sr-only">Open main menu</span>
                        <!--
                        Icon when menu is closed.

                        Menu open: "hidden", Menu closed: "block"
                        -->
                        <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                        </svg>
                        <!--
                        Icon when menu is open.

                        Menu open: "block", Menu closed: "hidden"
                        -->
                        <svg class="hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
                <div class="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
                    <div class="flex flex-shrink-0 items-center">
                        <img class="h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500" alt="Your Company">
                    </div>
                    <div class="hidden sm:ml-6 sm:block">
                        <div class="flex space-x-4">
                            <!-- Current: "bg-gray-900 text-white", Default: "text-gray-300 hover:bg-gray-700 hover:text-white" -->
                            <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                                <ActivatorContent>
                                    <a href="javascript:void(0);"
                                    @onclick="() => ChangeUrl(EnumPage.Dashboard)"
                                       aria-current="page"
                                       class="@IsActive(EnumPage.Dashboard)">
                                        Dashboard
                                    </a>
                                </ActivatorContent>
                                <ChildContent>
                                    @foreach(var item in ChartList)
                                    {
                                        <MudMenuItem OnClick="() => ShowChart(item)">@item</MudMenuItem>
                                    }
                                </ChildContent>
                            </MudMenu>
                            <a href="javascript:void(0);"
                            @onclick="() => ChangeUrl(EnumPage.Sale)"
                               aria-current="page"
                               class="@IsActive(EnumPage.Sale)">
                                Sale
                            </a>
                            <a href="javascript:void(0);"
                            @onclick="() => ChangeUrl(EnumPage.Product)"
                               class="@IsActive(EnumPage.Product)">
                                Product
                            </a>
                            <a href="javascript:void(0);"
                            @onclick="() => ChangeUrl(EnumPage.ProductCategory)"
                               class="@IsActive(EnumPage.ProductCategory)">
                                Product Category
                            </a>
                            <a href="javascript:void(0);"
                            @onclick="() => ChangeUrl(EnumPage.GenerateData)"
                               class="@IsActive(EnumPage.GenerateData)">
                                Generate Data
                            </a>
                            <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                                <ActivatorContent>
                                    <a href="javascript:void(0);"
                                       class="@IsActive(EnumPage.Default)">
                                        Reports
                                    </a>
                                </ActivatorContent>
                                <ChildContent>
                                    <MudMenuItem OnClick="() => ChangeUrl(EnumPage.BestProductReport)">Best Product Report</MudMenuItem>
                                    <MudMenuItem OnClick="() => ChangeUrl(EnumPage.SaleReport)">Sale Report</MudMenuItem>
                                    <MudMenuItem OnClick="() => ExportData()">Export Data</MudMenuItem>
                                </ChildContent>
                            </MudMenu>
                        </div>
                    </div>
                </div>
                <div class="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
                    <button type="button" class="relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
                        <span class="absolute -inset-1.5"></span>
                        <span class="sr-only">View notifications</span>
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
                        </svg>
                    </button>

                    <!-- Profile dropdown -->
                    <div class="relative ml-3">
                        <div>
                            <button @onclick="ShowProfileMenu" type="button" class="relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                                <span class="absolute -inset-1.5"></span>
                                <span class="sr-only">Open user menu</span>
                                <img class="h-8 w-8 rounded-full" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="">
                            </button>
                        </div>
                        @if (isShowProfileMenu)
                        {
                            <!--
                            Dropdown menu, show/hide based on menu state.

                            Entering: "transition ease-out duration-100"
                            From: "transform opacity-0 scale-95"
                            To: "transform opacity-100 scale-100"
                            Leaving: "transition ease-in duration-75"
                            From: "transform opacity-100 scale-100"
                            To: "transform opacity-0 scale-95"
                            -->
                            <div class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                                <!-- Active: "bg-gray-100", Not Active: "" -->
                                <a href="#" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Your Profile</a>
                                <a href="#" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-1">Settings</a>
                                <a href="#" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-2">Sign out</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- Mobile menu, show/hide based on menu state. -->
        <div class="sm:hidden" id="mobile-menu">
            <div class="space-y-1 px-2 pb-3 pt-2">
                <!-- Current: "bg-gray-900 text-white", Default: "text-gray-300 hover:bg-gray-700 hover:text-white" -->
                <a href="#" class="bg-gray-900 text-white block rounded-md px-3 py-2 text-base font-medium" aria-current="page">Dashboard</a>
                <a href="#" class="text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium">Team</a>
                <a href="#" class="text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium">Projects</a>
                <a href="#" class="text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium">Calendar</a>
            </div>
        </div>
    </nav>
    <header class="bg-white shadow">
        <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
            <h1 class="text-3xl font-bold tracking-tight text-gray-900">
                @InsertSpacesBeforeCapitals(Page.ToString())
                @* [ @(nav.Uri) ] *@
            </h1>
        </div>
    </header>
    <main>
        <div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">
            <!-- Your content -->
            @if (isLoading)
            {
                <Loading />
            }
            else
            {
                @Body
            }
        </div>
    </main>
</div>

@code {
    private bool isShowProfileMenu = false;
    private EnumPage Page = EnumPage.Dashboard;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
       
    }

    private async Task ExportData()
    {
        var titleData = new List<ExportTitle>
            {
                new ExportTitle { title = "product_code", dataIndex = "product_code" },
                new ExportTitle { title = "product_name", dataIndex = "product_name" }
            };
        var lst = await db.GetProductList();
        await JsRuntime.InvokeVoidAsync("exportJsonData", titleData, lst, "export-data");
    }

    public class ExportTitle
    {
        public string? title { get; set; }
        public string? dataIndex { get; set; }
    }

    private void ShowProfileMenu()
    {
        isShowProfileMenu = !isShowProfileMenu;
    }

    private enum EnumPage
    {
        Default,
        Sale,
        Product,
        ProductCategory,
        BestProductReport,
        GenerateData,
        SaleReport,
        Dashboard
    }

    private class PageUrlModel
    {
        public EnumPage Page { get; set; }
        public string Url { get; set; }
    }

    private string IsActive(EnumPage page)
    {
        return page == Page ?
            "bg-gray-900 text-white rounded-md px-3 py-2 text-sm font-medium" :
            "text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium";
    }

    private async Task ChangeUrl(EnumPage page)
    {
        StateContainer.DashboardShow = true;
        Page = page;
        isLoading = true;
        await Task.Delay(TimeSpan.FromSeconds(2));
        isLoading = false;
        nav.NavigateTo(PageList.FirstOrDefault(x => x.Page == page)?.Url ?? "");
    }

    private static List<PageUrlModel> PageList
        => new List<PageUrlModel>
                                {
            new PageUrlModel { Page = EnumPage.Sale, Url = "/Sale" },
            new PageUrlModel { Page = EnumPage.Product, Url = "setup/product" },
            new PageUrlModel { Page = EnumPage.ProductCategory, Url = "setup/product-category" },
            new PageUrlModel { Page = EnumPage.BestProductReport, Url = "best-product-report" },
            new PageUrlModel { Page = EnumPage.GenerateData, Url = "generate-data" },
            new PageUrlModel { Page = EnumPage.SaleReport, Url = "sale-report" },
            new PageUrlModel { Page = EnumPage.Dashboard, Url = "" },
                                 };

    private static List<string> ChartList =>
    new List<string>
                            {
        "BasicColumnChart",
        "BarBasicChart",
        "PastFiveYearChart",
        "PastFiveYearFunnelChart",
        "PastSevenDays",
        "YearlySaleAmount",
        "CompareTwoYear",
        "SixMostSoldProducts",
        "MaxMinQtyOfProducts",
        "FiveYearLineChart",
        "ProductCategoryAndProduct",
        "MonthlySaleAmount",
        "PastFiveYearDailySaleAmount",
        "MonthlyRevenueReportOfThreeYear"
                            };

    private void ShowChart(string chartName)
    {
        StateContainer.ChartName = chartName;
    }

    private static string InsertSpacesBeforeCapitals(string input)
    {
        var pattern = @"(?<!^)(?=[A-Z])"; // Positive lookahead for capital letters
        var replaced = Regex.Replace(input, pattern, " ");
        return replaced;
    }
}